# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-08-01 12:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(blank=True, default='', max_length=2000)),
                ('title', models.CharField(max_length=500)),
                ('subtitle', models.CharField(blank=True, max_length=500)),
                ('producer', models.CharField(blank=True, max_length=200)),
                ('date', models.DateField(blank=True, default=None, null=True)),
                ('country', models.CharField(blank=True, max_length=200)),
                ('year', models.IntegerField(blank=True, default=None, null=True)),
                ('cover', models.FileField(blank=True, default='', null=True, upload_to='')),
                ('discogs_url', models.URLField(blank=True)),
                ('fav', models.BooleanField(default=False)),
                ('slug', models.CharField(blank=True, default=None, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('realname', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('profile', models.CharField(blank=True, default='', max_length=2000)),
                ('discogs_url', models.URLField(blank=True)),
                ('website', models.URLField(blank=True, default=None, null=True)),
                ('fav', models.BooleanField(default=False)),
                ('country', models.CharField(blank=True, max_length=200)),
                ('slug', models.CharField(blank=True, default=None, max_length=250, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('fav', models.BooleanField(default=False)),
                ('slug', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='music.Genre')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('discogs_url', models.URLField(blank=True, null=True)),
                ('fav', models.BooleanField(default=False)),
                ('profile', models.CharField(blank=True, default='', max_length=2000, null=True)),
                ('contact', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('parent', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('website', models.URLField(blank=True, default=None, null=True)),
                ('logo', models.FileField(blank=True, default='', null=True, upload_to='')),
                ('slug', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.CharField(blank=True, default='', max_length=2000)),
                ('discogs_url', models.URLField(blank=True, null=True)),
                ('track', models.IntegerField(blank=True, default=None, null=True)),
                ('title', models.CharField(max_length=500)),
                ('fav', models.BooleanField(default=False)),
                ('length', models.TimeField(blank=True, default=None, null=True)),
                ('audio_file', models.FileField(blank=True, default='', null=True, upload_to='')),
                ('producer', models.CharField(blank=True, max_length=200)),
                ('last_played', models.DateField(blank=True, default=None, null=True)),
                ('slug', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.Album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='music.Artist')),
                ('genre', models.ManyToManyField(blank=True, to='music.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=100, null=True)),
                ('fav', models.BooleanField(default=False)),
                ('slug', models.CharField(blank=True, default=None, max_length=250, null=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.AddField(
            model_name='song',
            name='style',
            field=models.ManyToManyField(blank=True, default=None, to='music.Style'),
        ),
        migrations.AddField(
            model_name='song',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='artist',
            name='genre',
            field=models.ManyToManyField(blank=True, default=None, to='music.Genre'),
        ),
        migrations.AddField(
            model_name='artist',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.DO_NOTHING, to='music.Artist'),
        ),
        migrations.AddField(
            model_name='album',
            name='genre',
            field=models.ManyToManyField(blank=True, default='', to='music.Genre'),
        ),
        migrations.AddField(
            model_name='album',
            name='label',
            field=models.ManyToManyField(blank=True, default='', to='music.Label'),
        ),
        migrations.AddField(
            model_name='album',
            name='style',
            field=models.ManyToManyField(blank=True, default='', to='music.Style'),
        ),
        migrations.AddField(
            model_name='album',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='album',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
